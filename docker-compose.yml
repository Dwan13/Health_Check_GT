version: "3"
services:
  app3:
    container_name: app3 # How the container will appear when listing containers from the CLI
    build:
      context: .
      dockerfile: Dockerfile # The <container-name>:<tag-version> of the container, in this case the tag version aligns with the version of node
    user: node # The user to run as in the container
    working_dir: "/app3" # Where to container will assume it should run commands and where you will start out if you go inside the container
    networks:
    - app3 # Networking can get complex, but for all intents and purposes just know that containers on the same network can speak to each other
    ports:
    - "8070:8070" # <host-port>:<container-port> to listen to, so anything running on port 3000 of the container will map to port 3000 on our localhost
    volumes:
    - ./:/app3 # <host-directory>:<container-directory> this says map the current directory from your system to the /app directory in the docker container
    command: "node SRC/index.js" # The command docker will execute when starting the container, this command is not allowed to exit, if it does your container will stop
    healthcheck:
      test: curl --fail -s http://localhost:8070/ || exit 1
      interval: 1m30s
      timeout: 10s
      retries: 3
networks:
  app3:
